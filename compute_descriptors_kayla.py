#!/usr/bin/env python3

import sys, os, json, shutil
import hashlib
import numpy as np
import joblib
import logging
log = logging.getLogger(__name__)
#logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(process)s - %(message)s')

import ppdg

# Working directory where all models will be created
ppdg.WRKDIR = '/projects/kasp8735/affinity_test/'

# Path to the directory where to find the calc_energy executable and the two potential files
ppdg.RFSPP = '/projects/kasp8735/software/affinity/'

# Path where to find the charmm executable
ppdg.CHARMM = '/projects/kasp8735/software/charmm/exec/gnu/'

seq_BG505 = 'AENLWVTVYYGVPVWKDAETTLFCASDAKAYETEKHNVWATHACVPTDPNPQEIHLENVTEEFNMWKNNMVEQMHTDIISLWDQSLKPCVKLTPLCVTLQCTNVTNNITDDMRGELKNCSFNMTTELRDKKQKVYSLFYRLDVVQINENQGNRSNNSNKEYRLINCNTSAITQACPKVSFEPIPIHYCAPAGFAILKCKDKKFNGTGPCPSVSTVQCTHGIKPVVSTQLLLNGSLAEEEVMIRSENITNNAKNILVQFNTPVQINCTRPNNNTRKSIRIGPGQAFYATGDIIGDIRQAHCNVSKATWNETLGKVVKQLRKHFGNNTIIRFANSSGGDLEVTTHSFNCGGEFFYCNTSGLFNSTWISNTSVQGSNSTGSNDSITLPCRIKQIINMWQRIGQAMYAPPIQGVIRCVSNITGLILTRDGGSTNSTTETFRPGGGDMRDNWRSELYKYKVVKIEPLGVAPTRAKRR'

seq_BG505_KR = 'AENLWVTVYYGVPVWKDAETTLFCASDAKAYETEKHNVWATHACVPTDPNPQEIHLENVTEEFNMWKNNMVEQMQTDIISLWDQSLKPCVKLTPLCVTLQCTNVTNNITDDMRGELKNCSFNMTTELRDKKQKVYSLFYRLDVVQINENQGNRSNNSNKEYRLISCNTSAITQACPKVSFEPIPIHYCAPAGFAILKCKDKKFNGTGPCPSVSTVQCTHGIKPVVSTQLLLNGSLAEEEVMIRSENITNNAKVILVQFNTPVQINCTRPNNNTRKSIRIGPGQAFYATGDIIGDIRQAHCNVSKATWNETLGKVVKQLRKHEGNNTIIVFANSSGGDLEITTHSFNCGGEFFYCNTSGLFNSTWISNTSVQGSNSTGSNDSITLPCRIKQIINMWQEIGQAMYAPPIQGVIRCVSNITGLILTRDGGNNTNTTEIFRPGGGDMRDNWRSELYKYKVVKIEPLGVAPTRAKRR'

seq_BG505_HQ = 'AENLWVTVYYGVPVWKDAETTLFCASDAKAYETEKHNVWATHACVPTDPNPQEIHLENVTEEFNMWKNNMVEQMQTDIISLWDQSLKPCVKLTPLCVTLQCTNVTNNITDDMRGELKNCSFNMTTELRDKKQKVYSLFYRLDVVQINENQGNRSNNSNKEYRLISCNTSAITQACPKVSFEPIPIHYCAPAGFAILKCKDKKFNGTGPCPSVSTVQCTHGIKPVVSTQLLLNGSLAEEEVMIRSENITNNAKTILVQFNTPVQINCTRPNNNTRKSIRIGPGQAFYATGDIIGDIRQAHCNVSKATWNETLGKVVKQLRKHFGNNTIISFANSSGGDLEITTHSFNCGGEFFYCNTSGLFNSTWISNTSVQGSNSTGSNDSITLPCRIKQIINMWQEIGQAMYAPPIQGVIRCVSNITGLILTRDGGTNGNTTEIFRPGGGDMRDNWRSELYKYKVVKIEPLGVAPTRAKRR'

seq_BG505_EU = 'AENLWVTVYYGVPVWKDAETTLFCASDAKAYETEKHNVWATHACVPTDPNPQEIHLENVTEEFNMWKNNMVEQMQTDIISLWDQSLKPCVKLTPLCVTLQCTNVTNNITDDMRGELKNCSFNMTTELRDKKQKVYSLFYRLDVVQINENQGNRSNNSNKEYRLINCNTSAITQACPKVSFEPIPIHYCAPAGFAILKCKDKKFNGTGPCPSVSTVQCTHGIKPVVSTQLLLNGSLAEEEVMIRSENITNNAKTILVQFNTPVQINCTRPNNNTRKSIRIGPGQAFYATGDIIGDIRQAHCNVSKATWNETLGKVVKQLRKHFGNNTIIIFANSSGGDLEITTHSFNCGGEFFYCNTSGLFNSTWISNTSVQGSNSTGSNDSITLPCRIKQIINMWQEIGQAMYAPPIQGVIRCVSNITGLILTRDGGNPNGTTEIFRPGGGDMRDNWRSELYKYKVVKIEPLGVAPTRAKRR'

seq_VRC01 = 'QVQLVQSGGQMKKPGESMRISCRASGYEFIDCTLNWIRLAPGKRPEWMGWLKPRGGAVNYARPLQGRVTMTRDVYSDTAFLELRSLTVDDTAVYFCTRGKNCDYNWDFEHWGRGTPVIV/VLTQSPGTLSLSPGETAIISCRTSQYGSLAWYQQRPGQAPRLVIYSGSTRAAGIPDRFSGSRWGPDYNLTISNLESGDFGVYYCQQYEFFGQGTKVQVDI'

seq_VRC01GL = 'QVQLVQSGAEVKKPGASVKVSCKASGYTFTGYYMHWVRQAPGQGLEWMGWINPNSGGTNYAQKFQGRVTMTRDTSISTAYMELSRLRSDDTAVYYCARGKNCDYNWDFQHWGQGTLVT/VLTQSPATLSLSPGERATLSCRASQSVSSYLAWYQQKPGQAPRLLIYDASNRATGIPARFSGSGSGTDFTLTISSLEPEDFAVYYCQQYEFFGQGTKLE'

#if __name__=='__main__':
#    mat = ppdg.eval_pkl('regression-hiv-rfha-fast-9306.pkl', '%s/%s' % (seq_BG505,seq_VRC01), (1,2), 'tpl_5fyj.pdb', name=None, nmodels=12, ncores=11)
#    gl = ppdg.eval_pkl('regression-hiv-rfha-fast-9306.pkl', '%s/%s' % (seq_BG505,seq_VRC01GL), (1,2), 'tpl_5fyj.pdb', name=None, nmodels=12, ncores=11)
#    ppdg.clean()
#    print('Binding affinity is %.3f for the mature and %.3f for the germline' % (mat, gl))

def main(ag, ab):
    cpxseq = '%s/%s' % (ag, ab)
    name = hashlib.md5(cpxseq.encode()).hexdigest()
    print('Directory name is', name)
    dg = ppdg.eval_pkl('regression-hiv-rfha-veryfast-6224.pkl', '%s/%s' % (ag, ab), (1,2), 'tpl_5fyj.pdb', name=None, nmodels=12, ncores=14)
    print('Binding affinity is', dg)
    os.system(". ./RMDIR.sh")
    #ppdg.clean()
    os.mkdir('temp_dir')
    os.system('mv %s ./temp_dir' %(name))
    if not os.path.exists('/pl/active/rdi_data/hiv/master_dir/%s' %(name)):
        if os.path.isfile('./temp_dir/%s/descriptors.json' %(name)):
            shutil.copytree('./temp_dir/%s' %(name), '/pl/active/rdi_data/hiv/master_dir/%s' %(name))
    shutil.rmtree('temp_dir')
    return dg

if __name__=='__main__': main()
